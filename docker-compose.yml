services:
  postgres-db:
    image: postgres:14
    container_name: postgres-db
    environment:
      POSTGRES_DB: ecommerce_users
      POSTGRES_USER: postgres1
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped

  user-service:
    build: ./user-service
    container_name: user-service
    command: gunicorn user_service.wsgi:application --bind 0.0.0.0:8001
    volumes:
      - ./user-service:/app
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=ecommerce_users
      - DB_USER=postgres1
      - DB_PASSWORD=postgres
      - SECRET_KEY=your-super-secret-key-change-in-prod
      - DEBUG=0
    depends_on:
      - postgres-db
    restart: unless-stopped

  product-service:
    build: ./product-service
    container_name: product-service
    command: gunicorn product_service.wsgi:application --bind 0.0.0.0:8002
    volumes:
      - ./product-service:/app
    ports:
      - "8002:8002"
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=ecommerce_products
      - DB_USER=postgres1
      - DB_PASSWORD=postgres
      - SECRET_KEY=your-super-secret-key-change-in-prod
      - DEBUG=0
    depends_on:
      - postgres-db
    restart: unless-stopped

  order-service:
    build: ./order-service
    container_name: order-service
    command: gunicorn order_service.wsgi:application --bind 0.0.0.0:8003
    volumes:
      - ./order-service:/app
    ports:
      - "8003:8003"
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=ecommerce_orders
      - DB_USER=postgres1
      - DB_PASSWORD=postgres
      - SECRET_KEY=your-super-secret-key-change-in-prod
      - DEBUG=0
    depends_on:
      - postgres-db
    restart: unless-stopped

  payment-service:
    build: ./payment-service
    container_name: payment-service
    command: gunicorn payment_service.wsgi:application --bind 0.0.0.0:8004
    volumes:
      - ./payment-service:/app
    ports:
      - "8004:8004"
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=ecommerce_payments
      - DB_USER=postgres1
      - DB_PASSWORD=postgres
      - SECRET_KEY=your-super-secret-key-change-in-prod
      - DEBUG=0
    depends_on:
      - postgres-db
    restart: unless-stopped 

  notification-service:
    build: ./notification-service
    container_name: notification-service
    command: gunicorn notification_service.wsgi:application --bind 0.0.0.0:8005
    volumes:
      - ./notification-service:/app
    ports:
      - "8005:8005"
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=ecommerce_notifications
      - DB_USER=postgres1
      - DB_PASSWORD=postgres
      - SECRET_KEY=your-super-secret-key-change-in-prod
      - DEBUG=0
    depends_on:
      - postgres-db
    restart: unless-stopped   

volumes:
  postgres_data: